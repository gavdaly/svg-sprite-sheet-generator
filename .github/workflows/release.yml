name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    name: Build and Package (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build (release)
        run: cargo build --locked --release

      - name: Set VERSION env from tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
        shell: bash

      - name: Package (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          BIN=svg_sheet
          ARCH=$(uname -m)
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          PKG_NAME="${BIN}-${VERSION}-${OS}-${ARCH}"
          mkdir -p dist
          tar -C target/release -czf "dist/${PKG_NAME}.tar.gz" "${BIN}"
          echo "Packaged dist/${PKG_NAME}.tar.gz"

      - name: Package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $Bin = "svg_sheet.exe"
          $Arch = $env:PROCESSOR_ARCHITECTURE
          $PkgName = "svg_sheet-$env:VERSION-windows-$Arch"
          New-Item -ItemType Directory -Path dist | Out-Null
          Compress-Archive -Path "target/release/$Bin" -DestinationPath "dist/$PkgName.zip"
          Write-Host "Packaged dist/$PkgName.zip"

      - name: Upload packaged artifact
        uses: actions/upload-artifact@v4
        with:
          name: svg_sheet-${{ env.VERSION }}-${{ runner.os }}
          path: dist/*
          if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate SHA256SUMS.txt
        run: |
          cd artifacts
          find . -type f -name "svg_sheet-*" -print0 | xargs -0 sha256sum > ../SHA256SUMS.txt
          echo "Generated SHA256SUMS.txt" && cat ../SHA256SUMS.txt

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/svg_sheet-*
            SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

